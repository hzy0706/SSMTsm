<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.trkj.trainingprojects.dao.ClassRoomDao">
    <resultMap type="com.trkj.trainingprojects.entity.ClassRoom" id="ClassroomMap">
        <id property="classroomId" column="ClassRoom_Id" jdbcType="INTEGER"/>
        <result property="classroomName" column="ClassRoom_Name" jdbcType="VARCHAR"/>
        <result property="classroomState" column="ClassRoom_State" jdbcType="INTEGER"/>
        <result property="catacity" column="Catacity" jdbcType="INTEGER"/>
        <result property="place" column="Place" jdbcType="VARCHAR"/>
        <result property="addname" column="AddName" jdbcType="VARCHAR"/>
        <result property="addtime" column="ADDTIME" jdbcType="TIMESTAMP"/>
        <result property="updatename" column="UpdateName" jdbcType="VARCHAR"/>
        <result property="updatetime" column="UpdateTime" jdbcType="TIMESTAMP"/>
        <result property="deletename" column="DeleteName" jdbcType="VARCHAR"/>
        <result property="deletetime" column="DeleteTime" jdbcType="TIMESTAMP"/>
        <result property="timeliness" column="TimeLiness" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="Base_Column_List">
      ClassRoom_Id, ClassRoom_Name, ClassRoom_State, Catacity, Place, AddName, ADDTIME, UpdateName, UpdateTime, DeleteName, DeleteTime, TimeLiness
    </sql>

    <!--查询所有-->
    <select id="selectAllClassRooms" resultMap="ClassroomMap">
        select
        <include refid="Base_Column_List" />
        from classroom
        where TimeLiness = 0
    </select>

    <!--查询单个-->
    <select id="queryById" resultMap="ClassroomMap">
        select
          ClassRoom_Id, ClassRoom_Name, ClassRoom_State, Catacity, Place, AddName, ADDTIME, UpdateName, UpdateTime, DeleteName, DeleteTime, TimeLiness
        from tr01904.classroom
        where ClassRoom_Id = #{classroomId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="ClassroomMap">
        select
          ClassRoom_Id, ClassRoom_Name, ClassRoom_State, Catacity, Place, AddName, ADDTIME, UpdateName, UpdateTime, DeleteName, DeleteTime, TimeLiness
        from tr01904.classroom
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="ClassroomMap">
        select
        ClassRoom_Id, ClassRoom_Name, ClassRoom_State, Catacity, Place, AddName, ADDTIME, UpdateName, UpdateTime,
        DeleteName, DeleteTime, TimeLiness
        from tr01904.classroom
        <where>
            <if test="classroomId != null">
                and ClassRoom_Id = #{classroomId}
            </if>
            <if test="classroomName != null and classroomName != ''">
                and ClassRoom_Name = #{classroomName}
            </if>
            <if test="classroomState != null">
                and ClassRoom_State = #{classroomState}
            </if>
            <if test="catacity != null">
                and Catacity = #{catacity}
            </if>
            <if test="place != null and place != ''">
                and Place = #{place}
            </if>
            <if test="addname != null and addname != ''">
                and AddName = #{addname}
            </if>
            <if test="addtime != null">
                and ADDTIME = #{addtime}
            </if>
            <if test="updatename != null and updatename != ''">
                and UpdateName = #{updatename}
            </if>
            <if test="updatetime != null">
                and UpdateTime = #{updatetime}
            </if>
            <if test="deletename != null and deletename != ''">
                and DeleteName = #{deletename}
            </if>
            <if test="deletetime != null">
                and DeleteTime = #{deletetime}
            </if>
            <if test="timeliness != null">
                and TimeLiness = #{timeliness}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="classroomId" useGeneratedKeys="true">
        insert into tr01904.classroom(ClassRoom_Name, ClassRoom_State, Catacity, Place, AddName, ADDTIME, UpdateName, UpdateTime, DeleteName, DeleteTime, TimeLiness)
        values (#{classroomName}, #{classroomState}, #{catacity}, #{place}, #{addname}, #{addtime}, #{updatename}, #{updatetime}, #{deletename}, #{deletetime}, #{timeliness})
    </insert>

    <insert id="insertBatch" keyProperty="classroomId" useGeneratedKeys="true">
        insert into tr01904.classroom(ClassRoom_Name, ClassRoom_State, Catacity, Place, AddName, ADDTIME, UpdateName,
        UpdateTime, DeleteName, DeleteTime, TimeLiness)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.classroomName}, #{entity.classroomState}, #{entity.catacity}, #{entity.place}, #{entity.addname},
            #{entity.addtime}, #{entity.updatename}, #{entity.updatetime}, #{entity.deletename}, #{entity.deletetime},
            #{entity.timeliness})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="classroomId" useGeneratedKeys="true">
        insert into tr01904.classroom(ClassRoom_Name, ClassRoom_State, Catacity, Place, AddName, ADDTIME, UpdateName,
        UpdateTime, DeleteName, DeleteTime, TimeLiness)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.classroomName}, #{entity.classroomState}, #{entity.catacity}, #{entity.place}, #{entity.addname},
            #{entity.addtime}, #{entity.updatename}, #{entity.updatetime}, #{entity.deletename}, #{entity.deletetime},
            #{entity.timeliness})
        </foreach>
        on duplicate key update
        ClassRoom_Name = values(ClassRoom_Name) , ClassRoom_State = values(ClassRoom_State) , Catacity =
        values(Catacity) , Place = values(Place) , AddName = values(AddName) , ADDTIME = values(ADDTIME) , UpdateName =
        values(UpdateName) , UpdateTime = values(UpdateTime) , DeleteName = values(DeleteName) , DeleteTime =
        values(DeleteTime) , TimeLiness = values(TimeLiness)
    </insert>

    <!--通过主键修改数据-->
    <update id="updateByClassRoomKey">
        update tr01904.classroom
        <set>
            <if test="classroomName != null and classroomName != ''">
                ClassRoom_Name = #{classroomName},
            </if>
            <if test="classroomState != null">
                ClassRoom_State = #{classroomState},
            </if>
            <if test="catacity != null">
                Catacity = #{catacity},
            </if>
            <if test="place != null and place != ''">
                Place = #{place},
            </if>
            <if test="addname != null and addname != ''">
                AddName = #{addname},
            </if>
            <if test="addtime != null">
                ADDTIME = #{addtime},
            </if>
            <if test="updatename != null and updatename != ''">
                UpdateName = #{updatename},
            </if>
            <if test="updatetime != null">
                UpdateTime = #{updatetime},
            </if>
            <if test="deletename != null and deletename != ''">
                DeleteName = #{deletename},
            </if>
            <if test="deletetime != null">
                DeleteTime = #{deletetime},
            </if>
            <if test="timeliness != null">
                TimeLiness = #{timeliness},
            </if>
        </set>
        where ClassRoom_Id = #{classroomId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from tr01904.classroom where ClassRoom_Id = #{classroomId}
    </delete>

    <!--修改删除人与时效性-->
    <update id="deleteByClassRoom" parameterType="com.trkj.trainingprojects.entity.ClassRoom">
        update tr01904.classroom
        set
          DeleteName = #{deletename},
          DeleteTime = #{deletetime},
          TimeLiness = #{timeliness}
        where ClassRoom_Id = #{classroomId}
    </update>
</mapper>

