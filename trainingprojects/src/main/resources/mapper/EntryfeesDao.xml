<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.trkj.trainingprojects.dao.EntryfeesDao">
    <resultMap type="com.trkj.trainingprojects.vo.EntryfeesVo" id="EntryfeesMap">
        <id property="feesId" column="Fees_Id" jdbcType="INTEGER"/>
        <result property="feesNumber" column="Fees_Number" jdbcType="VARCHAR"/>
        <result property="feesReceivable" column="Fees_Receivable" jdbcType="NUMERIC"/>
        <result property="feesType" column="Fees_Type" jdbcType="VARCHAR"/>
        <result property="feesAdvance" column="Fees_Advance" jdbcType="NUMERIC"/>
        <result property="accumulated" column="Accumulated" jdbcType="NUMERIC"/>
        <result property="receipts" column="Receipts" jdbcType="NUMERIC"/>
        <result property="updatename" column="UpdateName" jdbcType="VARCHAR"/>
        <result property="updatetime" column="UpdateTime" jdbcType="TIMESTAMP"/>
        <result property="addname" column="AddName" jdbcType="VARCHAR"/>
        <result property="addtime" column="AddTime" jdbcType="TIMESTAMP"/>
        <result property="deletename" column="DeleteName" jdbcType="VARCHAR"/>
        <result property="deletetime" column="DeleteTime" jdbcType="TIMESTAMP"/>
        <result property="timeliness" column="TimeLiness" jdbcType="INTEGER"/>
        <result property="feesState" column="Fees_State" jdbcType="INTEGER"/>
        <result property="approvaltime" column="ApprovalTime" jdbcType="TIMESTAMP"/>
        <result property="approvalname" column="ApprovalName" jdbcType="VARCHAR"/>
        <result property="revokeapptime" column="RevokeAppTime" jdbcType="TIMESTAMP"/>
        <result property="revokeappname" column="RevokeAppName" jdbcType="VARCHAR"/>
        <result property="registerId" column="Register_Id" jdbcType="INTEGER"/>
        <result property="studentId" column="Student_Id" jdbcType="INTEGER"/>
        <result property="courseId" column="Course_Id" jdbcType="INTEGER"/>
        <association property="registerVo" javaType="com.trkj.trainingprojects.vo.RegisterVo">
            <id column="Register_Id" jdbcType="INTEGER" property="registerId" />
            <result column="ConsultAnt" jdbcType="VARCHAR" property="consultant" />
            <result column="Sex" jdbcType="VARCHAR" property="sex" />
            <result column="Phone" jdbcType="VARCHAR" property="phone" />
            <result column="AttentState" jdbcType="INTEGER" property="attentstate" />
            <result column="PayState" jdbcType="INTEGER" property="paystate" />
            <result column="ConsultContent" jdbcType="VARCHAR" property="consultcontent" />
            <result column="AddName" jdbcType="VARCHAR" property="addname" />
            <result column="ADDTIME" jdbcType="TIMESTAMP" property="addtime" />
            <result column="UpdateName" jdbcType="VARCHAR" property="updatename" />
            <result column="UpdateTime" jdbcType="TIMESTAMP" property="updatetime" />
            <result column="DeleteName" jdbcType="VARCHAR" property="deletename" />
            <result column="DeleteTime" jdbcType="TIMESTAMP" property="deletetime" />
            <result column="TimeLiness" jdbcType="INTEGER" property="timeliness" />
            <result column="Source_Id" jdbcType="INTEGER" property="sourceId" />
            <result column="Course_Id" jdbcType="INTEGER" property="courseId" />
            <result column="Emp_Id" jdbcType="INTEGER" property="empId" />
            <collection property="empVo" ofType="com.trkj.trainingprojects.vo.EmpVo">
                <id column="Emp_Id" jdbcType="INTEGER" property="empId" />
                <result column="JobNumber" jdbcType="VARCHAR" property="jobnumber" />
                <result column="Emp_Name" jdbcType="VARCHAR" property="empName" />
            </collection>
        </association>
        <association property="studentVo" javaType="com.trkj.trainingprojects.vo.StudentVo">
            <id property="studentId" column="Student_Id" jdbcType="INTEGER"/>
            <result property="studentName" column="Student_Name" jdbcType="VARCHAR"/>
            <result property="studentState" column="Student_State" jdbcType="INTEGER"/>
            <result property="sex" column="Sex" jdbcType="VARCHAR"/>
            <result property="studentPhone" column="Student_Phone" jdbcType="VARCHAR"/>
            <result property="address" column="Address" jdbcType="VARCHAR"/>
            <result property="imgaddress" column="ImgAddress" jdbcType="VARCHAR"/>
            <result property="parentname" column="ParentName" jdbcType="VARCHAR"/>
            <result property="parentphone" column="ParentPhone" jdbcType="VARCHAR"/>
            <result property="studentNumber" column="Student_Number" jdbcType="VARCHAR"/>
            <result property="entrance" column="Entrance" jdbcType="VARCHAR"/>
            <result property="studytime" column="StudyTime" jdbcType="TIMESTAMP"/>
            <result property="addname" column="AddName" jdbcType="VARCHAR"/>
            <result property="addtime" column="ADDTIME" jdbcType="TIMESTAMP"/>
            <result property="updatename" column="UpdateName" jdbcType="VARCHAR"/>
            <result property="updatetime" column="UpdateTime" jdbcType="TIMESTAMP"/>
            <result property="deletename" column="DeleteName" jdbcType="VARCHAR"/>
            <result property="deletetime" column="DeleteTime" jdbcType="TIMESTAMP"/>
            <result property="timeliness" column="TimeLiness" jdbcType="INTEGER"/>
            <result property="classesId" column="Classes_Id" jdbcType="INTEGER"/>
            <result property="sourceId" column="Source_Id" jdbcType="INTEGER"/>
            <result property="registerId" column="Register_Id" jdbcType="INTEGER"/>
        </association>
        <association property="courseVo" javaType="com.trkj.trainingprojects.vo.CourseVo">
            <id property="courseId" column="Course_Id" jdbcType="INTEGER"/>
            <result property="courseName" column="Course_Name" jdbcType="VARCHAR"/>
            <result property="courseState" column="Course_State" jdbcType="INTEGER"/>
            <result property="classhours" column="Classhours" jdbcType="INTEGER"/>
            <result property="courseMoney" column="Course_Money" jdbcType="NUMERIC"/>
            <result property="commission" column="Commission" jdbcType="NUMERIC"/>
            <result property="addname" column="AddName" jdbcType="VARCHAR"/>
            <result property="addtime" column="ADDTIME" jdbcType="TIMESTAMP"/>
            <result property="updatename" column="UpdateName" jdbcType="VARCHAR"/>
            <result property="updatetime" column="UpdateTime" jdbcType="TIMESTAMP"/>
            <result property="stopname" column="StopName" jdbcType="VARCHAR"/>
            <result property="stoptime" column="StopTime" jdbcType="TIMESTAMP"/>
            <result property="beginname" column="BeginName" jdbcType="VARCHAR"/>
            <result property="begintime" column="BeginTime" jdbcType="TIMESTAMP"/>
            <result property="deletename" column="DeleteName" jdbcType="VARCHAR"/>
            <result property="deletetime" column="DeleteTime" jdbcType="TIMESTAMP"/>
            <result property="timeliness" column="TimeLiness" jdbcType="INTEGER"/>
            <result property="classtypeId" column="ClassType_Id" jdbcType="INTEGER"/>
        </association>
    </resultMap>

    <sql id="Base_Column_List">
      e.Fees_Id, e.Fees_Number, e.Fees_Receivable, e.Fees_Type, e.Fees_Advance,
       e.Accumulated, e.Receipts, e.UpdateName, e.UpdateTime, e.AddName, e.AddTime,
        e.DeleteName, e.DeleteTime, e.TimeLiness, e.Fees_State, e.ApprovalTime,
         e.ApprovalName, e.RevokeAppTime, e.RevokeAppName, e.Register_Id, e.Student_Id, e.Course_Id
    </sql>

    <sql id="Base_Student_List">
        st.Student_Id, st.Student_Name, st.Student_State, st.Sex, st.Student_Phone,
         st.Address, st.ImgAddress, st.ParentName, st.ParentPhone, LPAD(st.Student_Number,7,'0') Student_Number,
          st.Entrance, st.StudyTime, st.AddName, st.ADDTIME, st.UpdateName, st.UpdateTime, st.DeleteName, st.DeleteTime,
           st.TimeLiness, st.Classes_Id, st.Source_Id, st.Register_Id
    </sql>

    <sql id="Base_Course_List">
      c.Course_Id, c.Course_Name, c.Course_State, c.Classhours, c.Course_Money, c.Commission, c.AddName,
       c.ADDTIME, c.UpdateName, c.UpdateTime, c.StopName, c.StopTime, c.BeginName, c.BeginTime, c.DeleteName,
        c.DeleteTime, c.TimeLiness, c.ClassType_Id
    </sql>

    <!--查询所有-->
    <select id="selectAllEntryFees" resultMap="EntryfeesMap">
        select
        <include refid="Base_Column_List" />,
        <include refid="Base_Student_List" />,
        <include refid="Base_Course_List" />,
        r.Register_Id, r.ConsultAnt, r.Sex, r.Phone, r.AttentState, r.PayState,
        r.ConsultContent, r.AddName,r.ADDTIME, r.UpdateName, r.UpdateTime,
        r.DeleteName, r.DeleteTime, r.TimeLiness, r.Source_Id, r.Course_Id,
        r.Emp_Id, em.Emp_Id, em.Emp_Name
        from entryfees e
        inner join register r on e.Register_Id=r.Register_Id
        inner join student st on e.Student_Id=st.Student_Id
        inner join course c on e.Course_Id=c.Course_Id
        inner join emp em on r.Emp_Id=em.Emp_Id
        where e.TimeLiness = 0 order by e.Fees_Id DESC
    </select>

    <!--查询单个-->
    <select id="queryById" resultMap="EntryfeesMap">
        select
          Fees_Id, Fees_Number, Fees_Receivable, Fees_Type, Fees_Advance, Accumulated, Receipts, UpdateName, UpdateTime, AddName, AddTime, DeleteName, DeleteTime, TimeLiness, Fees_State, ApprovalTime, ApprovalName, RevokeAppTime, RevokeAppName, Register_Id, Student_Id, Course_Id
        from tr01904.entryfees
        where Fees_Id = #{feesId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="EntryfeesMap">
        select
          Fees_Id, Fees_Number, Fees_Receivable, Fees_Type, Fees_Advance, Accumulated, Receipts, UpdateName, UpdateTime, AddName, AddTime, DeleteName, DeleteTime, TimeLiness, Fees_State, ApprovalTime, ApprovalName, RevokeAppTime, RevokeAppName, Register_Id, Student_Id, Course_Id
        from tr01904.entryfees
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="EntryfeesMap">
        select
        Fees_Id, Fees_Number, Fees_Receivable, Fees_Type, Fees_Advance, Accumulated, Receipts, UpdateName, UpdateTime,
        AddName, AddTime, DeleteName, DeleteTime, TimeLiness, Fees_State, ApprovalTime, ApprovalName, RevokeAppTime,
        RevokeAppName, Register_Id, Student_Id, Course_Id
        from tr01904.entryfees
        <where>
            <if test="feesId != null">
                and Fees_Id = #{feesId}
            </if>
            <if test="feesNumber != null and feesNumber != ''">
                and Fees_Number = #{feesNumber}
            </if>
            <if test="feesReceivable != null">
                and Fees_Receivable = #{feesReceivable}
            </if>
            <if test="feesType != null and feesType != ''">
                and Fees_Type = #{feesType}
            </if>
            <if test="feesAdvance != null">
                and Fees_Advance = #{feesAdvance}
            </if>
            <if test="accumulated != null">
                and Accumulated = #{accumulated}
            </if>
            <if test="receipts != null">
                and Receipts = #{receipts}
            </if>
            <if test="updatename != null and updatename != ''">
                and UpdateName = #{updatename}
            </if>
            <if test="updatetime != null">
                and UpdateTime = #{updatetime}
            </if>
            <if test="addname != null and addname != ''">
                and AddName = #{addname}
            </if>
            <if test="addtime != null">
                and AddTime = #{addtime}
            </if>
            <if test="deletename != null and deletename != ''">
                and DeleteName = #{deletename}
            </if>
            <if test="deletetime != null">
                and DeleteTime = #{deletetime}
            </if>
            <if test="timeliness != null">
                and TimeLiness = #{timeliness}
            </if>
            <if test="feesState != null">
                and Fees_State = #{feesState}
            </if>
            <if test="approvaltime != null">
                and ApprovalTime = #{approvaltime}
            </if>
            <if test="approvalname != null and approvalname != ''">
                and ApprovalName = #{approvalname}
            </if>
            <if test="revokeapptime != null">
                and RevokeAppTime = #{revokeapptime}
            </if>
            <if test="revokeappname != null and revokeappname != ''">
                and RevokeAppName = #{revokeappname}
            </if>
            <if test="registerId != null">
                and Register_Id = #{registerId}
            </if>
            <if test="studentId != null">
                and Student_Id = #{studentId}
            </if>
            <if test="courseId != null">
                and Course_Id = #{courseId}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="feesId" useGeneratedKeys="true">
        insert into tr01904.entryfees(Fees_Number, Fees_Receivable, Fees_Type, Fees_Advance, Accumulated, Receipts, UpdateName, UpdateTime, AddName, AddTime, DeleteName, DeleteTime, TimeLiness, Fees_State, ApprovalTime, ApprovalName, RevokeAppTime, RevokeAppName, Register_Id, Student_Id, Course_Id)
        values (#{feesNumber}, #{feesReceivable}, #{feesType}, #{feesAdvance}, #{accumulated}, #{receipts}, #{updatename}, #{updatetime}, #{addname}, #{addtime}, #{deletename}, #{deletetime}, #{timeliness}, #{feesState}, #{approvaltime}, #{approvalname}, #{revokeapptime}, #{revokeappname}, #{registerId}, #{studentId}, #{courseId})
    </insert>

    <insert id="insertBatch" keyProperty="feesId" useGeneratedKeys="true">
        insert into tr01904.entryfees(Fees_Number, Fees_Receivable, Fees_Type, Fees_Advance, Accumulated, Receipts,
        UpdateName, UpdateTime, AddName, AddTime, DeleteName, DeleteTime, TimeLiness, Fees_State, ApprovalTime,
        ApprovalName, RevokeAppTime, RevokeAppName, Register_Id, Student_Id, Course_Id)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.feesNumber}, #{entity.feesReceivable}, #{entity.feesType}, #{entity.feesAdvance},
            #{entity.accumulated}, #{entity.receipts}, #{entity.updatename}, #{entity.updatetime}, #{entity.addname},
            #{entity.addtime}, #{entity.deletename}, #{entity.deletetime}, #{entity.timeliness}, #{entity.feesState},
            #{entity.approvaltime}, #{entity.approvalname}, #{entity.revokeapptime}, #{entity.revokeappname},
            #{entity.registerId}, #{entity.studentId}, #{entity.courseId})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="feesId" useGeneratedKeys="true">
        insert into tr01904.entryfees(Fees_Number, Fees_Receivable, Fees_Type, Fees_Advance, Accumulated, Receipts,
        UpdateName, UpdateTime, AddName, AddTime, DeleteName, DeleteTime, TimeLiness, Fees_State, ApprovalTime,
        ApprovalName, RevokeAppTime, RevokeAppName, Register_Id, Student_Id, Course_Id)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.feesNumber}, #{entity.feesReceivable}, #{entity.feesType}, #{entity.feesAdvance},
            #{entity.accumulated}, #{entity.receipts}, #{entity.updatename}, #{entity.updatetime}, #{entity.addname},
            #{entity.addtime}, #{entity.deletename}, #{entity.deletetime}, #{entity.timeliness}, #{entity.feesState},
            #{entity.approvaltime}, #{entity.approvalname}, #{entity.revokeapptime}, #{entity.revokeappname},
            #{entity.registerId}, #{entity.studentId}, #{entity.courseId})
        </foreach>
        on duplicate key update
        Fees_Number = values(Fees_Number) , Fees_Receivable = values(Fees_Receivable) , Fees_Type = values(Fees_Type) ,
        Fees_Advance = values(Fees_Advance) , Accumulated = values(Accumulated) , Receipts = values(Receipts) ,
        UpdateName = values(UpdateName) , UpdateTime = values(UpdateTime) , AddName = values(AddName) , AddTime =
        values(AddTime) , DeleteName = values(DeleteName) , DeleteTime = values(DeleteTime) , TimeLiness =
        values(TimeLiness) , Fees_State = values(Fees_State) , ApprovalTime = values(ApprovalTime) , ApprovalName =
        values(ApprovalName) , RevokeAppTime = values(RevokeAppTime) , RevokeAppName = values(RevokeAppName) ,
        Register_Id = values(Register_Id) , Student_Id = values(Student_Id) , Course_Id = values(Course_Id)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update tr01904.entryfees
        <set>
            <if test="feesNumber != null">
                Fees_Number = #{feesNumber},
            </if>
            <if test="feesReceivable != null">
                Fees_Receivable = #{feesReceivable},
            </if>
            <if test="feesType != null">
                Fees_Type = #{feesType},
            </if>
            <if test="feesAdvance != null">
                Fees_Advance = #{feesAdvance},
            </if>
            <if test="accumulated != null">
                Accumulated = #{accumulated},
            </if>
            <if test="receipts != null">
                Receipts = #{receipts},
            </if>
            <if test="updatename != null">
                UpdateName = #{updatename},
            </if>
            <if test="updatetime != null">
                UpdateTime = #{updatetime},
            </if>
            <if test="addname != null">
                AddName = #{addname},
            </if>
            <if test="addtime != null">
                AddTime = #{addtime},
            </if>
            <if test="deletename != null">
                DeleteName = #{deletename},
            </if>
            <if test="deletetime != null">
                DeleteTime = #{deletetime},
            </if>
            <if test="timeliness != null">
                TimeLiness = #{timeliness},
            </if>
            <if test="feesState != null">
                Fees_State = #{feesState},
            </if>
            <if test="approvaltime != null">
                ApprovalTime = #{approvaltime},
            </if>
            <if test="approvalname != null">
                ApprovalName = #{approvalname},
            </if>
            <if test="revokeapptime != null">
                RevokeAppTime = #{revokeapptime},
            </if>
            <if test="revokeappname != null">
                RevokeAppName = #{revokeappname},
            </if>
            <if test="registerId != null">
                Register_Id = #{registerId},
            </if>
            <if test="studentId != null">
                Student_Id = #{studentId},
            </if>
            <if test="courseId != null">
                Course_Id = #{courseId},
            </if>
        </set>
        where Fees_Id = #{feesId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from tr01904.entryfees where Fees_Id = #{feesId}
    </delete>

    <!--修改缴费状态-->
    <update id="updateByEntryFeeState" parameterType="com.trkj.trainingprojects.entity.Entryfees">
        update tr01904.entryfees
        set
          Fees_State = #{feesState},
          ApprovalTime = #{approvaltime},
          ApprovalName = #{approvalname},
          RevokeAppTime = #{revokeapptime},
          RevokeAppName = #{revokeappname}
        where Fees_Id = #{feesId}
    </update>

    <!--修改删除人与时效性-->
    <update id="deleteByEntryFees" parameterType="com.trkj.trainingprojects.entity.Entryfees">
        update tr01904.entryfees
        set
          DeleteName = #{deletename},
          DeleteTime = #{deletetime},
          TimeLiness = #{timeliness}
        where Fees_Id = #{feesId}
    </update>

</mapper>

